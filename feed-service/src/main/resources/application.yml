spring:

  application:
    name: feed-service
    security:
      jwt:
        secret-key: ${JWT_SECRET_KEY}
        expiration: 600000 # 10 minutes
        refresh-token:
          expiration: 86400000 # one day
    urls:
      gateway: ${GATEWAY_URL}
      frontend: http://${FRONTEND_HOST}:${FRONTEND_PORT}

  config:
    import: optional:configserver:${CONFIG_URI:http://localhost:8899/config-server}
  profiles:
    active:
      - ${CONFIG_ACTIVE_PROFILE}

  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: ${FEED_DB_URI}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: saga-user-group-id
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: '*'

    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: false

kafka:
  topics:
    notification: notification-topic
    reaction: reaction-topic
    profile: profile-topic

eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_URI:http://localhost:8761/eureka}

logging:
  level:
    root: TRACE
    org.springframework.messaging: TRACE
    org.springframework.web.socket: TRACE
    org.hibernate.orm.jdbc.bind: ERROR
    dev.thural.quietspace.service: TRACE
    org.springframework.security: TRACE
    org.hibernate.sql: ERROR
    org.springframework.web.servlet.handler.HandlerMappingIntrospector: TRACE

server.port: ${FEED_SERVICE_PORT}