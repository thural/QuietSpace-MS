spring:
  application:
    name: notification-service
    urls:
      gateway: ${GATEWAY_URL}
      frontend: http://${FRONTEND_HOST}:${FRONTEND_PORT}
    security:
      jwt:
        secret-key: ${JWT_SECRET_KEY}
        expiration: 600000 # 10 minutes
        refresh-token:
          expiration: 86400000 # one day

  config:
    import: optional:configserver:${CONFIG_URI:http://localhost:8899/config-server}

  data:
    mongodb:
      uri: mongodb://${DB_USERNAME}:${DB_PASSWORD}@localhost:${NOTIFICATION_DB_PORT}/${DB_NAME}
  #      database: ${DB_NAME}
  #      host: localhost
  #      port: ${NOTIFICATION_DB_PORT}
  #      username: ${DB_ROOT_USERNAME}
  #      password: ${DB_ROOT_PASSWORD}
  #      auto-index-creation: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: saga-user-group-id
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: '*'

    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: false

kafka:
  topics:
    notification: notification-topic
    reaction: reaction-topic
    profile: profile-topic
mongodb:
  transactionEnabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_URI:http://localhost:8761/eureka}

logging:
  level:
    root: DEBUG
    org.springframework.web: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

server:
  port: ${NOTIFICATION_SERVICE_PORT}
