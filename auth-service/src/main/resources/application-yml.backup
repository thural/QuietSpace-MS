spring:
  application:
    name: auth-service
    urls:
      gateway: ${GATEWAY_URL}
      frontend: http://${FRONTEND_HOST}:${FRONTEND_PORT}
    mailing:
      frontend:
        activation-url: ${ACTIVATION_URL}
    security:
      jwt:
        secret-key: ${JWT_SECRET_KEY}
        expiration: 6000000 # 10 minutes
        refresh-token:
          expiration: 86400000 # one day
  profiles:
    default: default
    active:
      - ${CONFIG_ACTIVE_PROFILE}
  config:
    import: optional:configserver:${CONFIG_URI:http://localhost:8899/config-server}
  mail:
    host: ${MAILDEV_HOST}
    port: ${MAILDEV_PORT}
    username: thural
    password: thural
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:mysql://localhost:${AUTH_DB_PORT}/${DB_NAME}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: create-drop
    database: mysql
    open-in-view: true
    show-sql: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: saga-user-group-id
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: '*'

    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: false

kafka:
  topics:
    notification: notification-topic
    reaction: reaction-topic
    profile: profile-topic
    user: user-topic

eureka:
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_URI:http://localhost:8761/eureka}
server:
  port: ${AUTH_SERVICE_PORT}
