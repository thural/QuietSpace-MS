plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

allprojects {
    group = 'com.jellybrains.quietspace'
    version = '0.0.1-SNAPSHOT'

    ext {
        set('springCloudVersion', "2023.0.1")
    }

    test {
        useJUnitPlatform()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
        implementation 'me.paulschwarz:spring-dotenv:4.0.0'

        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        implementation 'org.springframework.retry:spring-retry:2.0.6'
        implementation 'org.springframework.boot:spring-boot-starter-validation'


        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }
}

subprojects {
    tasks.register('pushImage') {
        doLast {
            if (bootBuildImage.getEnabled()) {
                exec {
                    commandLine 'docker', 'tag', "${project.name}:0.0.1-SNAPSHOT", "${System.getenv('DOCKER_USERNAME')}/${project.name}"
                }
                exec {
                    commandLine 'docker', 'push', "${System.getenv('DOCKER_USERNAME')}/${project.name}"
                }
            }
        }
    }

    bootBuildImage {
        imageName = "${System.getenv('DOCKER_USERNAME')}/${project.name}"
    }
}

bootJar {
    enabled = false
}

bootBuildImage {
    enabled = false
}