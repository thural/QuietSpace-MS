version: '3.8'
services:

  keycloak-db:
    container_name: ${KEYCLOAK_DB_HOST}
    hostname: ${KEYCLOAK_DB_HOST}
    image: mysql:5.7
    restart: on-failure
    volumes:
      - keycloak-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${KEYCLOAK_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${KEYCLOAK_DB_NAME}
      MYSQL_USER: ${KEYCLOAK_DB_USER}
      MYSQL_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    networks:
      - microservices-net

  keycloak:
    container_name: ${KEYCLOAK_HOST}
    hostname: ${KEYCLOAK_HOST}
    image: quay.io/keycloak/keycloak:24.0.3
    restart: on-failure
    volumes:
      - realms-data/:/opt/keycloak/data/import/
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: ${KEYCLOAK_DB_NAME}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    networks:
      - microservices-net
    ports:
      - ${KEYCLOAK_PORT}:8080
    depends_on:
      - keycloak-db

  zookeeper:
    container_name: ${ZOOKEEPER_HOST}
    hostname: ${ZOOKEEPER_HOST}
    image: confluentinc/cp-zookeeper:7.0.1
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net
    ports:
      - ${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}

  broker:
    container_name: ${KAFKA_BROKER_HOST}
    hostname: ${KAFKA_BROKER_HOST}
    image: confluentinc/cp-kafka:7.0.1
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:${KAFKA_BROKER_PORT}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-net
    ports:
      - ${KAFKA_BROKER_PORT}:${KAFKA_BROKER_PORT}
    depends_on:
      - zookeeper

networks:
  microservices-net:
    name: microservices-net
    driver: bridge
    external: true

volumes:
  keycloak-data:
  realms-data: